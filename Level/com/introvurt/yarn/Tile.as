package com.introvurt.yarn {		import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.events.Event;		//	public class Tile extends MovieClip {				public static const TILE_WAS_CLICKED:String = "tileWasClicked";				private var _gridX:int;		private var _gridY:int;		private var _val:int;				// json data		private var _neighbors:Array;		private var _isOpen:Boolean;		private var _isSafe:Boolean;		private var _isExit:Boolean;				public function Tile() {			// constructor code			tempValues();			init();		}				private function tempValues():void		{			_neighbors = [true, true, true, true];			_isOpen = false;			_isSafe = false;			_isExit = false;		}				private function init():void		{			addEventListener( MouseEvent.CLICK, onClick, false, 0, true );			addEventListener( Event.ADDED_TO_STAGE, onAdded, false, 0, true );		}				private function onAdded( e:Event ):void		{			removeEventListener( Event.ADDED_TO_STAGE, onAdded );			// this.spriteValue = Utils.randomRange(1,2);			this.spriteValue = 17;		}				private function onClick( e:MouseEvent ):void		{			// pull it directly from the Main			/*			this.spriteValue = Main(parent.parent).tileValue;			_isOpen = Main(parent.parent).tileIsOpen;			_isSafe = Main(parent.parent).tileIsSafe;			_isExit = Main(parent.parent).tileIsExit;			*/			dispatchEvent( new Event(TILE_WAS_CLICKED, true) );		}				public function setTileAttributes( val:int, op:Boolean, safe:Boolean, exit:Boolean ):void		{			this.spriteValue = val;			_isOpen = op;			_isSafe = safe;			_isExit = exit;		}				public function createJson():String		{			var json:String = '{';			json += 'tileset_coordinate: [ '+(_val-1)+', 0 ], ';			json += 'entrances: [ '+_neighbors+' ], ';			json += 'is_occupiable: '+_isOpen+', ';			json += 'is_safe_spot: '+_isSafe+', ';			json += 'is_exit: '+_isExit+' ';			json += '}';						return json;		}				// Tile knows where it is in the grid		public function set gridX( val:int ) {			_gridX = val;		}		public function get gridX():int {			return _gridX;		}		public function set gridY( val:int ) {			_gridY = val;		}		public function get gridY():int {			return _gridY;		}		// which sprite...		public function set spriteValue( val:int ):void		{			_val = val;			tileSet.x = -16 * (_val-1);		}		// neighbor issues		public function get isOpen():Boolean		{			return _isOpen;		}		public function set neighbors( arr:Array ):void		{			_neighbors = arr.slice();		}	}}